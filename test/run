#!/bin/bash

num_step_passed=0
num_step_failed=0
num_step_skipped=0
num_step_pending=0

function is_comment() {
	[[ $1 == \#* ]] && return 0 || return 1
}

function is_empty() {	
	local trimed_line=`echo $1`
	[ ${#trimed_line} -eq 0 ] && return 0 || return 1
}

function is_new_scenario() {
	local keyword=`echo $1 | awk '{ split($0, a, " "); print a[1] }'`
	[ "$keyword" = "Scenario:" ] && return 0 || return 1
}

function run_step() {
	local step=`echo $1 | awk '{ split($0, a, " "); print a[2], a[3], a[4], a[5], a[6] }'`
	$step
}

function run_scenario() {
	echo ">> "
	echo ">> ---------"
	local rcode=0
	local scenario_file=$1
	cat $scenario_file | while read line; do	
		if [ $rcode -ne 0 ]; then echo "$line (SKIPPED)"
		else
			local keyword=`echo $line | awk '{ split($0, a, " "); print a[1] }'`
			if [ "$keyword" = "Given" -o "$keyword" = "When" -o "$keyword" = "Then" -o "$keyword" = "Finally" -o "$keyword" = "And" ]; then
				run_step "$line"
				local step_rcode=$?
				if [ $step_rcode -ne 0 ]; then
					if ( ! is_empty "$error" ); then
						echo ">> $line (FAILED $error)"
					else
						echo ">> $line (FAILED)"
					fi
				else
					echo ">> $line"
				fi
				rcode=$step_rcode||$rcode
				echo $rcode > "$curr_dir/scenario.rcode"
			else
				echo ">> $line"
			fi
		fi		
	done
	rcode=`cat "$curr_dir/scenario.rcode"`
	rm "$curr_dir/scenario.rcode"
	# if [ $rcode -ne 0 ]; then
	# 		echo "SCENARIO FAILED"
	# 	fi
	return $rcode
}



function run_feature() {
	local rcode=0
	local feature=$1
	echo ">> "
	echo ">> ****************************************************"
	echo ">> Running $feature"
	echo ">> ****************************************************"
	local scenario_name=''
	cat $feature | while read line; do	
		if ( is_comment $line || is_empty $line ); then
			continue
		fi
		if [ -e "$curr_dir/scenario.out" ]; then
			if ( is_new_scenario $line ); then
				run_scenario "$curr_dir/scenario.out"
				rcode=$?||$rcode
				rm "$curr_dir/scenario.out"
			fi
			echo $line >> $curr_dir/scenario.out
		else
			if ( is_new_scenario $line ); then
				echo $line >> $curr_dir/scenario.out
			else
				echo ">> $line"
			fi
		fi
		echo $rcode > "$curr_dir/feature.rcode"
	done
	rcode=`cat "$curr_dir/feature.rcode"`
	run_scenario "$curr_dir/scenario.out"
	rcode=$?||$rcode
	rm "$curr_dir/scenario.out"
	rm "$curr_dir/feature.rcode"
	# if [ $rcode -ne 0 ]; then
	# 		echo "FEATURE FAILED"
	# 	fi
	return $rcode
}


rcode=0

curr_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. $curr_dir/../bin/ec2.config

for steps in $curr_dir/steps/*.steps; do
	source $steps
done

if [ $# -eq 1 ]; then
	run_feature $curr_dir/features/$1.feature
	rcode=$?
else	
	for feature in $curr_dir/features/*.feature; do
		run_feature $feature
		rcode=$?||$rcode
	done
fi

if [ $rcode -ne 0 ]; then
	echo ">> RUN FAILED"
fi
exit $rcode


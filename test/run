#!/bin/bash

function is_comment() {
	[[ $1 == \#* ]] && return 0 || return 1
}

function trim() {
	echo $1
}

function is_empty() {	
	local trimed_line=`echo $1`
	[ ${#trimed_line} -eq 0 ] && return 0 || return 1
}

function is_new_scenario() {
	local keyword=`echo $1 | awk '{ split($0, a, " "); print a[1] }'`
	[ "$keyword" = "Scenario:" ] && return 0 || return 1
}

function run_step() {
	local step=`echo $1 | awk '{ split($0, a, " "); print a[2], a[3], a[4], a[5], a[6] }'`
	$step
}

function run_scenario_steps() {
	local rcode=0
	local scenario_file=$1
	cat $scenario_file | while read line; do		
		if [ $rcode -ne 0 ]; then echo "$line (SKIPPED)"
		else
			echo $line
			local keyword=`echo $line | awk '{ split($0, a, " "); print a[1] }'`
			if [ "$keyword" = "Given" -o "$keyword" = "When" -o "$keyword" = "Then" -o "$keyword" = "Finally" -o "$keyword" = "And" ]; then
				run_step "$line"
				local step_rcode=$?
				# echo "step_rcode=$step_rcode"
				# echo "rcode_before=$rcode"
				rcode=$step_rcode||$rcode
				# echo "rcode_after=$rcode"
				if [ $step_rcode -ne 0 ]; then
					echo "$error"
				fi
			fi
		fi		
	done
	return $rcode
}

function run_scenario() {
	local scenario_file=$1
	local scenario_name=$2
	local rcode=0
	if [ -e $scenario_file ]; then
		run_scenario_steps $scenario_file
		rcode=$?
		rm $scenario_file
	fi
	return $rcode
}

function run_feature() {
	local rcode=0
	local feature=$1
	echo ""
	echo "****************************************************"
	echo "Running $feature"
	echo "****************************************************"
	local scenario_name=''
	cat $feature | while read line; do	
		if ( is_new_scenario $line ); then
			run_scenario "$curr_dir/scenario.out" "$scenario_name"
			rcode=$?||$rcode
			scenario_name=`echo $line | awk '{ split( $0, a, ":"); print a[2] }'`
			echo ""
			echo "---------"
			echo $line
		elif ( is_comment $line || is_empty $line ); then
			continue
		elif [ "$scenario_name" = "" ]; then
			echo $line
		else
			echo $line >> $curr_dir/scenario.out
		fi
	done
	run_scenario "$curr_dir/scenario.out" "$scenario_name"
	return $?||$rcode
}

rcode=0

curr_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. $curr_dir/../bin/ec2.config

for steps in $curr_dir/steps/*.steps; do
	source $steps
done

if [ $# -eq 1 ]; then
	run_feature $curr_dir/features/$1.feature
	rcode=$?
else	
	for feature in $curr_dir/features/*.feature; do
		run_feature $feature
		rcode=$?||$rcode
	done
fi

if [ $rcode -ne 0 ]; then
	echo "RUN FAILED"
fi
exit $rcode
